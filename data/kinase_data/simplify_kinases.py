'''
Takes in the messy kinase names from the databases and cleans it up to generate the kinase classes according to
the kinbase classification method.
'''
import sys

OUT_DIR = '../tmp'
DATA_DIR = '.'

table = []
with open(f'{DATA_DIR}/merged_db_metadata_kinase.tsv', 'r') as metadata_table:
    for i, line in enumerate(metadata_table):
        if i == 0:
            continue
        
        entry = line.strip().split('\t')
        try:
            uniprot_id, position, residue, kinases, kinase_species, sources = entry
        except ValueError:
            print(f'Could not read line {i + 1}: incorrect nummber of fields ({len(entry)}): "{line.strip()}"')
            continue
        
        if kinases == 'NA':
            continue
        
        table.append(entry)

print(f'{len(table)} phosphorylations with annotated kinase', file=sys.stderr)

# Prefiltering: map same kinases with different names and remove non-vertebrate proteins (also reduce some rare subvariants to the more general category)
# Sadly, there's just no way around a lot of manual mapping
prefiltering_mapping = {
    "GRK-1": "GRK1",
    "GRK-2": "GRK2",
    "GRK-3": "GRK3",
    "GRK-4": "GRK4",
    "GRK-5": "GRK5",
    "GRK-6": "GRK6",
    "AlphaK3": "MAK",
    "AURKA": "AurA",
    "AURKB": "AurB",
    "AURKC": "AurC",
    "Aurora A": "AurA",
    "Aurora B": "AurB",
    "BRSK1 iso2": "BRSK1",
    "ABL2": "Arg",
    "Abl2": "Arg",
    "ABL1": "Abl",
    "BCR-ABL1": "Abl",
    "Bcr": "Abl",
    "ABL": "Abl",
    "Bcr": "Abl",
    "BCR-ABL1": "Abl",
    "BARK": "GRK2",
    "BARK1": "GRK2",
    "CAMK1A": "CAMK1",
    "CAMK1B": "CAMK1",
    "CAMK1G": "CAMK1",
    "CAMK2A": "CAMK2",
    "CAMK2B": "CAMK2",
    "CAMK2D": "CAMK2",
    "CAMK2D iso8": "CAMK2",
    "CAMK2G": "CAMK2",
    "CAMKK1": "CAMK",
    "CAMKK2": "CAMK",
    "CCDPK": "CAMK",
    "CDK11A": "CDK11",
    "CDK11B": "CDK11",
    "CDKL5": "STK9",
    "CDKL2": "p56",
    "CDPK": "CPK",
    "CHEK1": "CHK1",
    "CHEK2": "CHK2",
    "CIT": "CRIK",
    "CK1A": "CK1",
    "CK1A2": "CK1",
    "CK1D": "CK1",
    "CK1E": "CK1",
    "CK1G1": "CK1",
    "CK1G2": "CK1",
    "CK1G3": "CK1",
    "CK1": "CK1",
    "CK1_delta": "CK1",
    "CK1_epsilon": "CK1",
    "CK2A2": "CK2",
    "CK2B": "CK2",
    "CK2_alpha": "CK2",
    "CK2_beta": "CK2",
    "CLA4": "p21",
    "CPK": "CK",
    "CPK1": "CK1",
    "CPK10": "CK10",
    "CK3": "CK3",
    "CPK32": "CK",
    "CPK34": "CK",
    "CSF1R": "FMS",
    "CSFR": "FMS",
    "CSNK1D": "CK1",
    "CSNK1E": "CK1",
    "CaM-KI": "CaMK1",
    "CaM-KI_alpha": "CaMK1",
    "CaM-KII": "CaMK2",
    "CaM-KII_alpha": "CaMK2",
    "CaM-KII_delta": "CaMK2",
    "CaM-KIV": "CaMK4",
    "CaM-KK_alpha": "CaMKK1",
    "Caki": "CaMK",
    "CamK2": "CaMK2",
    "Cdk1": "CDK1",
    "ChaK1": "TRPM7",
    "ChaK2": "TRPM7",
    "Cot": "MAP3K8",
    "DNA-PK": "DNAPK",
    "DUN1": "CHK2",
    "EEF2K": "CaMK2",
    "EIF2AK2": "PKR",
    "EIF2AK3": "PKR",
    "Eg3 kinase": "MELK",
    "FAK iso2": "FAK",
    "FAK1": "FAK",
    "FAK2": "FAK",
    "Fer": "FER",
    "Fes": "FES",
    "FYN": "Fyn",
    "GSK-3_alpha": "GSK3A",
    "GSK-3_beta": "GSK3B",
    "GSK3B iso2": "GSK3B",
    "GWL": "MASTL",
    "Haspin": "HASPIN",
    "IKK_alpha": "IKKA",
    "IKK_beta": "IKKB",
    "IKK_epsilon": "IKKE",
    "ILK1": "ILK",
    "JNK1 iso2": "JNK1",
    "JNK2 iso2": "JNK2",
    "Lck": "LCK",
    "Lyn": "LYN",
    "MATK": "CHK",
    "MEK1": "MAP2K1",
    "MEK2": "MAP2K2",
    "MEK5": "MAP2K5",
    "MEKK1": "MAP3K1",
    "MEKK2": "MAP3K2",
    "MEKK3": "MAP3K3",
    "MEKK4": "MAP3K4",
    "MEKK6": "MAP3K6",
    "MKK3": "MAP2K3",
    "MKK4": "MAP2K4",
    "MKK5": "MAP2K5",
    "MKK6": "MAP2K6",
    "MKK7": "MAP2K7",
    "MKNK2": "GPRK7",
    "MPK3": "MAPK3",
    "MPK6": "MAPK6",
    "MRCKa": "MRCKA",
    "MTOR": "mTOR",
    "Met": "MET",
    "Mlck": "MLCK",
    "Mnk1 iso2": "Mnk",
    "NPM-ALK": "ALK",
    "NTRK2": "TRKB",
    "OXSR1": "OSR1",
    "PDGFR_alpha": "PDGFRA",
    "PDGFR_beta": "PDGFRB",
    "PDHK1": "PDK1",
    "PDHK2": "PDK2",
    "PDHK3": "PDK3",
    "PDHK4": "PDK4",
    "PDK-1": "PDK1",
    "PDK-2": "PDK2",
    "PDPK1": "PDK1",
    "PERK": "PKR",
    "PHKA1": "PHK",
    "PHKB": "PHK",
    "PHKG1": "PHK",
    "PHKG2": "PHK",
    "PIM-1": "PIM1",
    "skMLCK": "MLCK",
    "smMLCK": "MLCK",
    "p70S6K iso2": "p70S6K",
    "p90RSK": "RSK",
    "p58": "CDK11",
    "mbk": "DYRK1A",
    "mbk-2": "DYRK",
    "mapk": "MAPK",
    "ksg1": "PDK1",
    "atr": "ATR",
    "atm": "ATM",
    "cdk": "CDK",
    "cdk1": "CDK1",
    "cdk2": "CDK2",
    "cdc2": "CDC2",
    "cak": "CAK",
    "caMLCK": "MLCK",
    "aurka": "AurA",
    "ZIPK/DAPK3": "DAPK3",
    "Yes": "YES",
    "wee1": "Wee1",
    "Wee2": "WEE",
    "WEE1": "Wee1",
    "WEE1B": "Wee1b",
    "VRK2 iso2": "VRK2",
    "VEGFR1": "VEGFR",
    "VEGFR2": "VEGFR",
    "VEGFR3": "VEGFR",
    "UHMK1": "KIS",
    "Uhmk1": "KIS",
    "Tyk2": "TYK2",
    "Tyr": "TK",
    "TrkA": "TRKA",
    "TrkB": "TRKB",
    "TrkC": "TRKC",
    "Tao": "TAO",
    "TRB2": "Trb2",
    "Tor": "TOR",
    "mTOR": "TOR",
    "TOR2": "TOR",
    "TORC1": "TOR",
    "TORC2": "TOR",
    "TGFBR1": "TGFbR1",
    "TGFBR2": "TGFbR2",
    "TGFBR2 iso1": "TGFbR2",
    "TAOK1": "TAO1",
    "Syk": "SYK",
    "Src": "SRC",
    "Src iso1": "SRC",
    "STK10": "LOK",
    "STK24/MST3": "MST3",
    "STK3/MST2": "MST2",
    "STK4/MST1": "MST1",
    "SRMS": "SRM",
    "SIK1": "SIK",
    "SIK2": "SIK",
    "SGK1": "SGK",
    "Ron": "RON",
    "Ret": "RET",
    "Ret iso3": "RET",
    "RSK-1": "RSK1",
    "RSK-2": "RSK2",
    "RSK-5": "RSK5",
    "RPS6KA1": "RSK1",
    "RPS6KA3": "RSK2",
    "RPS6KA4": "MSK2",
    "RPS6KA5": "MSK1",
    "RPS6KB1": "p70S6K",
    "Pink1": "PINK1",
    "Pim1": "PIM1",
    "Pim2": "PIM2",
    "Pim3": "PIM3",
    "Pak": "PAKA",
    "PAK": "PAKA",
    "PTK6": "BRK",
    "PRKD2": "PKD2",
    "PRKD1": "PKD1",
    "PRKD3": "PKD3",
    "PKM iso2": "PKM",
    "PKMYT1": "MYT1",
    "PKG1/cGK-I": "PKG1",
    "PKG2/cGK-II": "PKG2",
    "PKG/PRKG1": "PKG1",
    "PKG/PRKG2": "PKG2",
    "PKG/cGK": "PKG",
    "PKG1 iso2": "PKG1",
    "PKD/PRKD1": "PKD1",
    "PKD/PRKD2": "PKD2",
    "PKDCC": "SgK493",
    "PKC_alpha": "PCKa",
    "PKC_beta": "PCKb",
    "PKC_delta": "PCKd",
    "PKC_epsilon": "PCKe",
    "PKC_eta 2": "PCKh",
    "PKC_gamma": "PCKg",
    "PKC_theta": "PKCt",
    "PKC_zeta": "PKCz",
    "PKCA": "PCKa",
    "PKCB": "PCKb",
    "PKCB iso2": "PCKb",
    "PKCD": "PCKd",
    "PKCE": "PCKe",
    "PKCG": "PCKg",
    "PKCH": "PCKh",
    "PKCI": "PCKi",
    "PKCT": "PKCt",
    "PKCZ": "PKCz",
    "PKC/PRKCA": "PCKa",
    "PKC/PRKCB": "PCKb",
    "PKC/PRKCD": "PCKd",
    "PKC/PRKCE": "PCKe",
    "PKC/PRKCG": "PCKg",
    "PKC/PRKCH": "PCKh",
    "PKC/PRKCI": "PCKi",
    "PKC/PRKCQ": "PKCt",
    "PKC/PRKCZ": "PKCz",
    "PKB/AKT1": "PKB",
    "PKB/AKT2": "PKB",
    "PKB/Akt1": "PKB",
    "PKB_beta": "PKB",
    "PKA_alpha": "PKACa",
    "PKACA": "PKACa",
    "PKACA iso2": "PKACa",
    "PKACB": "PKACb",
    "plk": "PLK",
    "plk1": "PLK",
    "wee2": "WEE",
    "PKC_eta": "PKC",
}

kinases_to_ignore = {"BtrW", "C4", "C5", "C6", "CAD", "CARK1", "CERK1", 
                     "CIPK11", "CIPK14", "CIPK21", "CIPK24", "CRPK1", 
                     "EFR", "Etk", "BAK1", "FUS3", "G11", "Gin4", "GRIK1",
                     "GTF2F1", "GUCY2D", "HRR25", "HT1", "IPL1", "ISPK",
                     "KIN10", "KIN28", "LIT1", "MHCK", "MPS1", "PBL27", "PCK1", 
                     "PDRP1", "PFKFB3", "PFKP", "PGK1", "PHO85", "PI3K",
                     "PIK3C2A", "PIK3CA", "PIK3CB", "PIK3CD", "PIK3CG", 
                     "PIK3R1", "PIKFYVE", "zakA", "yopH", "viral", "unc-43", "tpa",
                     "sgg", "regulates", "pmk", "par", "max", "gck", "hop", "eIK1", 
                     "eIK2", "PK4", "dsDNA", "cmkC", "ckk", "YpkA", "YAK1", 
                     "VZV", "Tropomyosin kinase", "UL97", "Titin kinase", "Titin",
                     "TNNI3K", "SWE1", "STYK1", "STYK1", "STRK1", "STN7", "STK16", "STK19", "STK26", "STK33",
                     "SRC64B", "SRK2E", "SGV1", "RK", "PtkA", "PknA", "PknB", "PknD", "PknG", "PknH", "PknJ",
                     "PKH1", "PKH2"}

table_prefilter = []
for entry in table:
    kinases = entry[3].split(',')
    kinases_prefiltered = set()
    for kinase in kinases:
        if kinase in kinases_to_ignore:
            new_kinase = 'NA'
        elif kinase in prefiltering_mapping.keys():
            new_kinase = prefiltering_mapping[kinase]
        else:
            new_kinase = kinase
        kinases_prefiltered.add(new_kinase)
    entry_prefilter = (*entry[:3], ','.join(kinases_prefiltered), *entry[4:])
    table_prefilter.append(entry_prefilter)

table = table_prefilter

kinase_freqs = {}

for entry in table:
    kinases = entry[3].strip().split(',')
    for kinase in kinases:
        if kinase in kinase_freqs.keys():
            kinase_freqs[kinase] += 1
        else:
            kinase_freqs[kinase] = 1

all_kinases = list(kinase_freqs)
all_kinases.sort()

print(*[f'{kinase}\t{kinase_freqs[kinase]}' for kinase in all_kinases], sep='\n')
print(f'{len(all_kinases)} kinases', file=sys.stderr)
